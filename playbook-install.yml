---
- hosts: weblate
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:
  - name: Create user, domain and database
    import_tasks: tasks/hs_basis.yml

  #################################
  ## create directories
  #################################
  - name: create directory bin
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory
  - name: create directory etc
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory data and static
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/data/static"
      state: directory
  - name: create directory var/tmp
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory

  ##################################
  ## install Weblate
  ##################################
  - name: create directory weblate
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/weblate"
      state: directory

  - name: create venv
    become: yes
    become_user: "{{pac}}-{{user}}"
    command: python3 -m venv .venv chdir="/home/pacs/{{pac}}/users/{{user}}/weblate"
    args:
      creates: "/home/pacs/{{pac}}/users/{{user}}/weblate/.venv"

  - name: install pip packages
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      source .venv/bin/activate
      pip install --upgrade pip wheel || exit -1
      pip install "Weblate=={{weblate_release}}" || exit -1
      pip install psycopg2 || exit -1
      pip install --force-reinstall --no-binary :all: cffi || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_pip_installed
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/weblate"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible_pip_installed"

  ##################################
  ## configuration
  ##################################
  - name: upload configuration file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/settings.py"
      dest: "/home/pacs/{{pac}}/users/{{user}}/etc/settings.py"

  - name: create symbolic link for settings file
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/etc/settings.py"
      dest: "/home/pacs/{{pac}}/users/{{user}}/weblate/.venv/lib/python3.7/site-packages/weblate/settings.py"
      state: link

  - name: create symbolic link for data
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/data"
      dest: "/home/pacs/{{pac}}/users/{{user}}/weblate/.venv/lib/python3.7/site-packages/data"
      state: link

  - name: upload restart script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/restart.sh"
      dest: "/home/pacs/{{pac}}/users/{{user}}/bin/restart.sh"
      mode: '0744'

  - name: upload sql script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/sql.sh"
      dest: "/home/pacs/{{pac}}/users/{{user}}/bin/sql.sh"
      mode: '0744'

  ########################
  ## setup the apache site
  ########################
  - name: drop htdocs-ssl/.htaccess
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/.htaccess"
       state: absent
  - name: drop subs-ssl/www/index.html
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/subs-ssl/www/index.html"
       state: absent
  - name: create symbolic link for static
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/data/static"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/static"
      state: link
  - name: upload .htaccess file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/htaccess"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/.htaccess"
  - name: upload passenger wsgi file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/passenger_wsgi.py"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/app-ssl/passenger_wsgi.py"

  ##################################
  ## other software configuration
  ##################################
  - name: upload redis configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/redis.conf" src="templates/redis.conf" mode=0600

  - name: upload monit configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.monitrc" src="templates/monitrc" mode=0600

  - name: upload celery start script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/start-celery.sh" src="templates/start-celery.sh" mode=0700

  - name: upload celery stop script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/start-celery.sh" src="templates/stop-celery.sh" mode=0700

  - name: upload logrotate configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.logrotate" src="templates/logrotate" mode=0600

  ####################################
  ## install cron jobs
  ####################################
  - name: start monit as cronjob
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "start monit at reboot"
      special_time: reboot
      job: rm -f $HOME/var/run/* && /usr/bin/monit -c "$HOME/.monitrc"
  - name: run logrotate once a day
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "logrotate"
      minute: "27"
      hour: "1"
      job: "/usr/sbin/logrotate -s $HOME/.logrotate.state $HOME/.logrotate"

  #################################################
  ## start the redis and celery services via monit
  #################################################
  - name: start monit
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      /usr/bin/monit -c ".monitrc"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"

  ########################
  ## prepare the site
  ########################
  - name: Sleep to wait for redis to start
    pause:
      seconds: 20

  - name: prepare the site
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      source .venv/bin/activate
      weblate migrate  --noinput || exit -1
      weblate collectstatic --noinput --clear || exit -1
      weblate compress || exit -1
      weblate compilemessages || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/weblate"

  - name: create super user
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      source .venv/bin/activate
      echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(is_superuser=True).exists() or User.objects.create_superuser('{{admin_name}}', '{{admin_email}}', '{{admin_password}}')" | python manage.py shell || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/weblate"
